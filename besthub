-- Photon-Style Custom UI Library (Rayfield Compatible API)

local BestHub = {}
BestHub.__index = BestHub

-- Store internal references
local UIS = game:GetService("UserInputService")
local TS = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

-- Create the main screen GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "BestHubUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = CoreGui

-- Core window
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 750, 0, 450)
MainFrame.Position = UDim2.new(0.5, -375, 0.5, -225)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderSizePixel = 0
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.Parent = ScreenGui

-- Navbar (bottom)
local Navbar = Instance.new("Frame")
Navbar.Size = UDim2.new(1, 0, 0, 40)
Navbar.Position = UDim2.new(0, 0, 1, -40)
Navbar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Navbar.BorderSizePixel = 0
Navbar.Parent = MainFrame

-- Sample tab buttons (Icons/Labels can be added)
local function CreateNavButton(name)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 100, 1, 0)
    btn.Text = name
    btn.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.BorderSizePixel = 0
    btn.Parent = Navbar
    return btn
end

-- Tab simulation
local Tabs = {}
function BestHub:CreateWindow(settings)
    local self = setmetatable({}, BestHub)

    self.Name = settings.Name or "Photon UI"
    self.Tabs = {}

    function self:CreateTab(tabSettings)
        local tab = {
            Name = tabSettings.Name or "New Tab",
            Elements = {}
        }

        local tabButton = CreateNavButton(tab.Name)
        Tabs[tab.Name] = tabButton

        function tab:AddToggle(toggleSettings)
            local toggle = {
                Type = "Toggle",
                Name = toggleSettings.Name or "New Toggle",
                Default = toggleSettings.Default or false,
                Callback = toggleSettings.Callback or function() end
            }

            toggle.Value = toggle.Default

            function toggle:Set(value)
                toggle.Value = value
                toggle.Callback(value)
            end

            table.insert(tab.Elements, toggle)
            return toggle
        end

        function tab:AddSlider(sliderSettings)
            local slider = {
                Type = "Slider",
                Name = sliderSettings.Name or "New Slider",
                Min = sliderSettings.Min or 0,
                Max = sliderSettings.Max or 100,
                Default = sliderSettings.Default or 50,
                Callback = sliderSettings.Callback or function() end
            }

            slider.Value = slider.Default

            function slider:Set(value)
                if value >= slider.Min and value <= slider.Max then
                    slider.Value = value
                    slider.Callback(value)
                end
            end

            table.insert(tab.Elements, slider)
            return slider
        end

        function tab:AddButton(buttonSettings)
            local button = {
                Type = "Button",
                Name = buttonSettings.Name or "New Button",
                Callback = buttonSettings.Callback or function() end
            }

            function button:Press()
                button.Callback()
            end

            table.insert(tab.Elements, button)
            return button
        end

        function tab:AddSection(sectionName)
            local section = {
                Type = "Section",
                Name = sectionName or "Section"
            }

            table.insert(tab.Elements, section)
            return section
        end

        table.insert(self.Tabs, tab)
        return tab
    end

    return self
end

return BestHub
